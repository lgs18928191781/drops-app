declare interface NftItem {
  name: string
  amount: number
  foundryName: string
  classify: string[]
  tokenId: string
  coverUrl: string
  metaId: string
  genesis: string
  tokenIndex: string
  codehash: string
  total?: number
  hasCount?: number
  putAway?: boolean
  productName?: string
  deadlineTime?: number
  head?: string
}
declare interface NftItemDetail {
  foundryName: string
  foundryMetaId: string
  foundryHead: string
  amount: number
  remainingTime: number
  nftName: string
  classify: string[]
  describe: string
  forgeTime: number
  contractAddress: string
  tokenId: string
  ownerName: string
  ownerMetaId: string
  ownerHead: string
  type: string
  revenue: string
  coverUrl: string
  tx: string
  putAway: boolean
  codeHash: string
  genesis: string
  tokenIndex: string
  genesisTxId: string
  sellTxId: string
  ownerAddress: string
  sensibleId: string
  sellContractTxId: string
  sellDesc: string
  issueMetaTxId: string
}

declare interface NftItem extends GetSeriesNftListResItem {
  name: string
  amount: number
  foundryName: string
  classify: string[]
  tokenId: string
  coverUrl: string
  metaId: string
  genesis: string
  tokenIndex: string
  codehash: string
  total?: number
  hasCount?: number
  putAway?: boolean
  productName?: string
  deadlineTime?: number
  head?: string
  ownerAvatarType?: string
  avatarType?: string
  issueUserAvatarType?: string
  nftCertificationType: number
  nftGenesisCertificationType: number
  nftBackIcon: string
  flag?: string
  nftOwnerName?: string
  nftOwnerAvatarType?: string
}
declare interface NftItemDetail extends NFTApiGetNFTDetailResDataItem {
  [x: string]: any
  ownerAvatarType: string
  issueUserAvatarType: string
  foundryName: string
  foundryMetaId: string
  foundryHead: string
  amount: number
  remainingTime: number
  nftName: string
  classify: string[]
  describe: string
  forgeTime: number
  contractAddress: string
  tokenId: string
  ownerName: string
  ownerMetaId: string
  ownerHead: string
  type: string
  revenue: string
  coverUrl: string
  tx: string
  putAway: boolean
  codeHash: string
  genesis: string
  tokenIndex: string
  genesisTxId: string
  sellTxId: string
  ownerAddress: string
  sensibleId: string
  sellContractTxId: string
  sellDesc: string
  issueMetaTxId: string
  auctionDrsc?: string
  sellState: number
  isAuction?: boolean
  startPrice?: string
  currentPrice?: number
  minGapPrice?: number
  auctionTime?: number
  auctionStatus?: number
  update_time?: number
  nftCertificationType: number
  nftGenesisCertificationType: number
  nftGenesisCertificationName: string
  nftWebsite: string
  auctionId?: string
  nftCurrentAuctionCreateTxId: string
  auctionMetaId?: string
  auctionUserName?: string
  auctionAvatarType?: string
  nftIsFirstSell: boolean
  nftIssueAddress: string
  nftHasDonate: boolean
  nftHasLike: boolean
  nftLikeCount: number
  nftDonateValue: number
  nftBackIcon: string
  uuid?: string
}

declare interface NFTListItem {
  uuid?: string
  cover: string
  backCover: string
  classify: string
  issueMetaId?: string
  issueName: string
  issueAvatarType: string
  issueAddress?: string
  issueTxId?: string
  ownerMetaId: string
  ownerName: string
  ownerAvatarType: string
  ownerAddress?: string
  status: number
  likeCount?: number
  isHasLike?: boolean
  price?: number
  genesis: string
  codehash: string
  tokenIndex: string
  name: string
  auctionTxId?: string
  genesisTxId?: string
  sensibleId?: string
  seriesName?: string
  hasSeriesCount?: number
  seriesTotal?: number
  isFirstSell?: boolean
  acutionEndTime?: number
  isCompound: boolean
  isLegal?: boolean // 是否法币
  limited?: number
}
